definitions:
  controllers.CreateProductPayload:
    properties:
      description:
        type: string
      image:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  controllers.LoginUserPayload:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  controllers.RegisterUserPayload:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.ProductSchema:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  description: This is E-Commerce API server
  termsOfService: http://github.com/ZUBERKHAN034/go-ecom
  title: E-Commerce API
  version: "1.0"
paths:
  /product:
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Product Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateProductPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Product created successfully
          schema:
            type: string
        "400":
          description: Product already exists
          schema:
            type: string
      summary: Create Product
      tags:
      - Product
  /products:
    get:
      consumes:
      - application/json
      description: Get Products
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            items:
              $ref: '#/definitions/models.ProductSchema'
            type: array
      summary: Get Products
      tags:
      - Product
  /user/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            type: string
        "400":
          description: Invalid password
          schema:
            type: string
      summary: Login
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: User Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterUserPayload'
      produces:
      - application/json
      responses:
        "201":
          description: User Registered successfully
          schema:
            type: string
        "400":
          description: User already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register
      tags:
      - User
swagger: "2.0"
